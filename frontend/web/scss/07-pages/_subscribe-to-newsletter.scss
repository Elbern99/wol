.subscribe-to-newsletter {

  p {
    margin: 0 0 16px;
    font-size: 13px;

    @include breakpoint('tablet') {
      font-size: 16px;
      margin: 0 0 13px;
    }
  }

  .small-paragraph {
    display: none;

    @include breakpoint('tablet') {
      display: block;
    }
  }

  .select-clear-all {
    float: right;

    @include breakpoint_custom($breakpoint-tablet) {
      margin-right: 2px;
    }
  }

  .tooltip-dropdown {
    margin: 0 0 0 3px;
    height: 20px;
    width: 20px;

    @include breakpoint('tablet') {
      position: absolute;
      right: -37px;
      top: 38px;
      margin: 0;
    }
  }

  .icon-question {
    font-size: 16px;
    padding: 1px;

    @include breakpoint_custom($breakpoint-tablet) {
      margin-top: -4px;
    }
  }

  form {

    @include breakpoint('tablet') {
      max-width: 744px;
    }
  }

  .form-line {
    margin: 0 0 20px;

    @include breakpoint('tablet') {
      margin: 0 0 14px;
    }
  }

  .title-checkboxes {
    margin: 0 0 2px;

    @include breakpoint_custom($breakpoint-tablet) {
      margin: 0 0 5px;

      .grid-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        line-height: 1;

        .label-holder {
          order: -2;
        }
      }
    }

    .grid-item,
    .label-holder {
      padding-bottom: 0;
      margin-bottom: 0;
    }
  }

  .checkboxes {
    margin: 24px 0 33px;
  }

  .btn-blue-large {
    margin-top: 15px;

    @include breakpoint('tablet') {
      margin-top: 29px;
    }
  }
}

.select-clear-all {
  margin-right: -5px;
  position: relative;

  span {
    cursor: pointer;
    color: $light-blue;
    transition: color 0.3s ease;
    font-size: 10px;
    display: inline-block;
    margin: 0 0 0 4px;
    padding: 0 5px;
    background: #fff;
    
    &.active {
      color: $blue;
    }

    @include breakpoint('tablet') {
      &:hover {
        color: $blue;
      }
    }
  }
}


.js-Pjax { position: relative } /* parent element where switch will be made */

.js-Pjax-child { width: 100% }

/* position for the elements that will be removed */
.js-Pjax-remove {
  position: absolute;
  left: 50%;
  /* transform: translateX(-50%) */
  /* transform can't be used since we already use generic translate for the remove effect (eg animate.css) */
  /* margin-left: -width/2; // made with js */
  /* you can totally drop the margin-left thing from switchesOptions if you use custom animations */
}

/* CSS animations */
.Animated {
  animation-fill-mode: both;
  animation-duration: 1s;
}

.Animated--reverse { animation-direction: reverse }

.Animate--fast { animation-duration: .5s }
.Animate--noDelay { animation-delay: 0s !important;  }

.Animate--slideInRight { animation-name: Animation-slideInRight }
@keyframes Animation-slideInRight {
  0% {
    opacity: 0;
    transform: translateX(100rem);
  }

  100% {
    transform: translateX(0);
  }
}

.Animate--slideInLeft { animation-name: Animation-slideInLeft }
@keyframes Animation-slideInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100rem);
  }

  100% {
    transform: translateX(0);
  }
}